<!-- Here, we display the map -->
<div id="mapdiv" style="width: 100%; background-color:#EEEEEE; height: 600px;"></div>

<div id="places_about">
    <div id="places_pictures">
    </div>
    <div id="places_description">
    </div>
    <div id="places_option">
    </div>
</div> 


<link rel="stylesheet" href="../ammap/ammap.css" type="text/css">        
<script src="../ammap/ammap.js" type="text/javascript"></script>
<!-- map file should be included after ammap.js -->
<script src="../ammap/maps/js/worldLow.js" type="text/javascript"></script> 
<script type="text/javascript">
                    
	// add all your code to this method, as this will ensure that page is loaded
    
    // create AmMap object
    var map = new AmCharts.AmMap();

    var targetSVG = "M16,3.5c-4.142,0-7.5,3.358-7.5,7.5c0,4.143,7.5,18.121,7.5,18.121S23.5,15.143,23.5,11C23.5,6.858,20.143,3.5,16,3.5z M16,14.584c-1.979,0-3.584-1.604-3.584-3.584S14.021,7.416,16,7.416S19.584,9.021,19.584,11S17.979,14.584,16,14.584z";

    function placeAddedToTrip(data){
        map.selectObject();
        // Here we modify the recently added object
        var mapImages = map.dataProvider.images;

        for (var i = 0; i < mapImages.length; i++){
            place = mapImages[i];
            if (place.id == data) {
                mapImages[i].customData.is_search_result = false;
                mapImages[i].color = '#990000';
                break;
            }
        }
        map.validateData();

        // Now, we have to remove all search results

        var searchObjects = mapImages.filter(isSearchResult);

        for (var searchObject in searchObjects){
            for (var mapImage in mapImages){
                if (searchObject.id == mapImage.id){
                    var index = mapImages.indexOf(mapImage);
                    mapImages.splice(index,1);
                    break;
                }
            }
        }

        map.validateData();

        $("#places_pictures").empty();
        $("#places_description").empty();
        $("#places_option").empty();
    }
    // This function allows us to get objects from an array that fulfill a certain condition
    function isSearchResult(mapObject){
        return mapObject.customData.is_search_result;
    }

    function placeDeletedFromTrip(data){
        map.selectObject();
        var mapImages = map.dataProvider.images;
        for (var i = 0; i < mapImages.length; i++){
            place = mapImages[i];
            if (place.id == data) {
                var index = i;
                mapImages.splice(index,1);
                break;
            }
        }
        map.validateData();

        $("#places_pictures").empty();
        $("#places_description").empty();
        $("#places_option").empty();
    }

    function searchPlacesCallback(data){
        map.selectObject();

        // This is to remove previous search results when searching again
        var mapImages = map.dataProvider.images;
        for (var k = 0; k < mapImages.length; k++){
            place = mapImages[k];
            if (place.customData['is_search_result']) {
                var index = mapImages.indexOf(place);
                mapImages.splice(index,1);
            }
        }

        var places = data['places'];
        var images = data['images'];

            for (var i = 0; i < places.length; i++) {

                var isPlaceAlreadyOnMap = isSearchObjectAlreadyOnMap(places[i],mapImages);
                console.log(isPlaceAlreadyOnMap);

                if (isPlaceAlreadyOnMap){
                    continue;
                }

                var images_urls = new Array();
                var places_images = images[places[i].id];
                for (var j = 0; j < places_images.length; j++){
                    images_urls.push(places_images[j].url);
                }
                var attributes = {'pictures':images_urls, 'name':places[i].name, 'description':places[i].description, 'is_search_result':true};
                mapImages.push({
                    id:places[i].id,
                    color: '#4273C2',
                    svgPath: targetSVG,
                    title: places[i].name,
                    latitude: places[i].latitude,
                    longitude: places[i].longitude,
                    scale: 1.5,
                    zoomLevel: 2,
                    customData: attributes,
                    });
            }
            map.validateData();
        }

        function isSearchObjectAlreadyOnMap(searchObject, sourceArray){
            console.log(searchObject);
            console.log(sourceArray);
            for (var k = 0; k < sourceArray.length; k++){
                console.log(sourceArray[k]);
                if (sourceArray[k].id == searchObject.id) {
                    return true;
                }
            }
            return false;
        }

	AmCharts.ready(function() {

    var dataProvider = {
            mapVar: AmCharts.maps.worldLow,
            getAreasFromMap:true                    
        };
	    // set path to images
	    map.pathToImages = "../ammap/images/";

	    

	    map.areasSettings = {
    		autoZoom: true,
	    	selectedColor: "#BB8800",
	    	color: "#006600",
	    	outlineThickness: 0.1,
	    	rollOverOutlineColor: "#BB8800",
	    	rollOverColor: "#004400"
		};

        map.addListener("clickMapObject", function(event){
        
            var attributes = event.mapObject.customData;
            var pictures = event.mapObject.customData.pictures;
            var description = event.mapObject.customData.description;
            var name = event.mapObject.customData.name;

            //We first iterate for the pictures, showing only 6 of them
            var length = pictures.length;

            $("#places_pictures").empty();

            if (length > 6) {
                length = 6;
            };
            for (var i = 0; i < length; i++) {
                $("#places_pictures").append("<img src="+pictures[i]+" border=0 height=150px width=150px>");
            };

            $("#places_description").empty();
            $("#places_description").append("<h3 style='color:white;'>"+ name +"</h3><p style='color:white;>"+ description +"</p>");
            <% if (@logged_user.trips.include? @trip) %>
            $("#places_option").empty();
            if (attributes.is_search_result) {
                $("#places_option").append("<button class='btn btn-success' type='button' id='add_place_button'>Add Place to Map</button>");
                $("#places_option").click(function(){
                    $.ajax({
                    type: "PUT",
                    url: "/trips/add_place/"+<%=@trip.id%>+".json",
                    data: {'place_id' : event.mapObject.id},
                    success: placeAddedToTrip(event.mapObject.id)
                    });
                });
            }else{
                $("#places_option").append("<button class='btn btn-danger' type='button' id='add_place_button'>Remove Place from Map</button>");
                $("#places_option").click(function(){
                    $.ajax({
                    type: "PUT",
                    url: "/trips/delete_place/"+<%=@trip.id%>+".json",
                    data: {'place_id' : event.mapObject.id},
                    success: placeDeletedFromTrip(event.mapObject.id)
                    });
                });
            }
            <% end %>

    });
		
    map.imagesSettings = {
        color: "#FFFFFF",
        rollOverColor: "#AAAAAA",
        selectedColor: "#000000",
        		alpha: 128,
    };
 

    // cities
    var cities = [];
    	<% @trip.places.each do |place| %>
            var images = new Array();
            <% place.images.each do |image| %>
                images.push("<%= image.url %>");
            <% end %>
            var attributes = {'pictures':images, 'name':"<%=place.name%>", 'description':"<%=place.description%>", 'is_search_result':false};
    		cities.push({
    			id:"<%=place.id%>",
        		color: '#990000',
        		svgPath: targetSVG,
        		title: "<%=place.name%>",
        		latitude:<%=place.latitude%>,
        		longitude:<%=place.longitude%>,
        		scale: 1.5,
        		zoomLevel: 2,
                customData: attributes,
    		});
    	<% end %>

    dataProvider.images = cities;
    	// pass data provider to the map object
    	map.dataProvider = dataProvider;
		// write the map to container div
		map.write("mapdiv");

        <% if (@logged_user.trips.include? @trip) %>
        $("#mapdiv").append('<div id = "search_box" style = "position:relative; top:-100%; right:-79.9%;"><%= text_field_tag 'search_bar', nil, :placeholder => 'Search for places', :size => '45' %></div>');
        $("#search_bar").keypress(searchPlaces);
        <% end %>


        $("#mapdiv").append('<span id="title_trip_name"><h2><% if @trip.name!="NEW_TRIP" %><%= @trip.name %><% end %></h2></span>');
        $("#mapdiv").append('<span id="user_legend"><% if @has_map %><div class="trip_users"><% @trip.users.each do |user| %><div id="user_frame"><%= image_tag(user.image_url, :size => "40x40")%><%= user.name %> <%= user.lastname %></div><% end %></div><% end %></span>');
       <% if @has_map && @trip.name == "NEW_TRIP" %>
            function tripNameChanged(name){
                $('#prompt_box').hide();
                $('#title_trip_name').children().text(name);

            }

            $('#application_main').append("<div id='prompt_box'><div id='name_change_form'><h2>Name your trip!</h2><input type='text' name='name' id='trip_name'></input></br><input class='button' type='button' id='trip_name_change_button' value='Change Name'></input></div></div>");
            $('#trip_name_change_button').click(function(){
                var name = $("#trip_name").val();
                $.ajax({
                    type: "PUT",
                    url: "/trips/"+<%=@trip.id%>+".json",
                    data: {'name' : name},
                    success: tripNameChanged(name)
                });
            });
        <% end %>
			    
	});
            
</script>
